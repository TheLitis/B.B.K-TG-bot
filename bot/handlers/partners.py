"""Handlers for promotions and partner programs."""

from __future__ import annotations

from aiogram import F, Router
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message

from ..context import get_app_context
from ..filters import menu_choice

router = Router(name="partners")


def _promo_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ", callback_data="partners:info"
                )
            ]
        ]
    )


@router.message(menu_choice("promos"))
async def show_promos(message: Message) -> None:
    ctx = get_app_context()
    promos = ctx.pricing.promos()
    if promos:
        lines = ["üéØ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏:"]
        for promo in promos:
            until = f"–¥–æ {promo.valid_until.strftime('%d.%m.%Y')}" if promo.valid_until else "–±–µ–∑ —Å—Ä–æ–∫–∞"
            lines.append(f"‚Ä¢ {promo.title} ({until})\n  {promo.description}")
    else:
        lines = ["–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫—Ü–∏–π. –ú—ã —Å–æ–æ–±—â–∏–º, –∫–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤–∏–Ω–∫–∏."]
    await message.answer("\n".join(lines), reply_markup=_promo_keyboard())


@router.callback_query(F.data == "partners:info")
async def partner_info(callback: CallbackQuery) -> None:
    ctx = get_app_context()
    partner_text = ctx.text_library.styles.get(
        "partners_intro",
        "–†–∞–±–æ—Ç–∞–µ–º —Å –¥–∏–∑–∞–π–Ω–µ—Ä–∞–º–∏, –¥–∏–ª–µ—Ä–∞–º–∏, –ø–æ–¥—Ä—è–¥—á–∏–∫–∞–º–∏ –∏ –æ–ø—Ç–æ–≤—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏. "
        "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –æ–±—Ä–∞–∑—Ü—ã –∏ –±—ã—Å—Ç—Ä—ã–µ –ø–æ—Å—Ç–∞–≤–∫–∏.",
    )
    await callback.answer()
    await callback.message.answer(partner_text)
